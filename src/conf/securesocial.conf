securesocial {
    #
    # Where to redirect the user if SecureSocial can't figure that out from
    # the request that was received before authenticating the user
    #
    onLoginGoTo=/

    #
    # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
    #
    onLogoutGoTo=/login

    #
    # Enable SSL
    #
    ssl=false

    #
    # The controller class for assets. This is optional, only required
    # when you use a custom class for Assets.
    #
    #assetsController=controllers.ReverseMyCustomAssetsController

     cookie {
            name=id
            path=/
            #domain=some_domain
            httpOnly=false
            idleTimeoutInMinutes=7200
            absoluteTimeoutInMinutes=7200
    }

    userpass {
        withUserNameSupport=true
        sendWelcomeEmail=false
        enableGravatarSupport=false
        signupSkipLogin=true
        tokenDuration=60
        tokenDeleteInterval=5
        minimumPasswordLength=1
        enableTokenJob=true
        hasher=bcrypt
    }

    #google {
    #    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    #    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    #    clientId=236498178017.apps.googleusercontent.com
    #    clientSecret=99JJLunruki_dpLbQdBN-uwj
    #    scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    #}
}

# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                controllers.Application.index
GET         /login                           controllers.Application.login
POST        /login                           controllers.Application.postLogin

#JSON data

GET         /json/entries                    controllers.EntryController.list(groupId:Option[Long] ?= None, stateId:Option[Long] ?= None)
POST        /json/entries                    controllers.EntryController.create
#PUT         /json/entries                  controllers.EntryController.update
PUT         /json/entries/$id<[0-9]+>        controllers.EntryController.update(id: Long)

GET         /json/entrygroups                controllers.EntryGroupController.list
POST        /json/entrygroups                controllers.EntryGroupController.create


# Login page
#GET         /login                           securesocial.controllers.LoginPage.login
GET         /logout                          securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                          securesocial.controllers.Registration.startSignUp
POST        /signup                          securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                   securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                   securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                           securesocial.controllers.Registration.startResetPassword
POST        /reset                           securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                    securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                    securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                        securesocial.controllers.PasswordChange.page
POST        /password                        securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider          securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider          securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                  securesocial.controllers.ProviderController.notAuthorized

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                    controllers.Assets.at(path="/public", file)
